  getData = () => {
    const url = this.state.ngrok_url+"/popular_movies";
    axios
      .get(url)
      .then(async (response) => {
        this.setState({ data: response.data.data });
      })
      .catch((error) => {
        console.log(error.message);
      });
  };
  -------------------------------------------------------------------
    componentDidMount() {
    this.getData();
  }
  -----------------------------------------------------------------
 keyExtractor = (item, index) => index.toString();

  renderItems = ({ item, index }) => {
    return (
      <View style={styles.cardContainer}>
        <Image
          style={styles.posterImage}
          source={{ uri: item.poster_link }}
        ></Image>
        <View style={styles.movieTitleContainer}>
          <Text style={styles.title}>{item.original_title}</Text>
          <View style={{flexDirection:"row"}}>
            <Text style={styles.subtitle}>{item.duration} mins | </Text>
            <Star score={item.rating} style={styles.starStyle}/>
          </View>
        </View>
      </View>
    );
  };
  ------------------------------------------------------------------------------------
    render() {
    const { data } = this.state;
    return (
      <View style={styles.container}>
        <ImageBackground
          source={require("../assets/bg.png")}
          style={{ flex: 1 }}
        >
          <FlatList
            data={data}
            keyExtractor={this.keyExtractor}
            renderItem={this.renderItems}
          />
        </ImageBackground>
      </View>
    );
  }
}
------------------------------------------------------------------------------------------------------
    this.state = {
      data: [],
      ngrok_url: ""
    };
  }

  componentDidMount() {
    this.getData();
  }

  getData = () => {
    const url =this.state.ngrok_url+"/recommended_movies";
    axios
      .get(url)
      .then(async (response) => {
        this.setState({ data: response.data.data });
      })
      .catch((error) => {
        console.log(error.message);
      });
  };

  keyExtractor = (item, index) => index.toString();

  renderItems = ({ item, index }) => {
    return (
      <View style={styles.cardContainer}>
        <Image
          style={styles.posterImage}
          source={{ uri: item.poster_link }}
        ></Image>
        <View style={styles.movieTitleContainer}>
          <Text style={styles.title}>{item.original_title}</Text>
          <View style={{flexDirection:"row"}}>
            <Text style={styles.subtitle}>{item.duration} mins | </Text>
            <Star score={item.rating} style={styles.starStyle}/>
          </View>
        </View>
      </View>
    );
  };

  render() {
    const { data } = this.state;
      return (
        <View style={styles.container}>
          <ImageBackground
            source={require("../assets/bg.png")}
            style={{ flex: 1 }}
          >
            <FlatList
              data={data}
              keyExtractor={this.keyExtractor}
              renderItem={this.renderItems}
            />
          </ImageBackground>
        </View>
      );
  }
}
---------------------------------------------------------------------------------
    this.state = {
      data: [],
      ngrok_url: ""
    };
  }
  
  componentDidMount() {
    this.getData();
  }

  getData = () => {
    const url = this.state.ngrok_url+"/liked";
    axios
      .get(url)
      .then(async (response) => {
        this.setState({ data: response.data.data });
      })
      .catch((error) => {
        console.log(error.message);
      });
  };

  keyExtractor = (item, index) => index.toString();

  renderItems = ({ item, index }) => {
    return (
      <View style={styles.cardContainer}>
        <Image
          style={styles.posterImage}
          source={{ uri: item.poster_link }}
        ></Image>
        <View style={styles.movieTitleContainer}>
          <Text style={styles.title}>{item.original_title}</Text>
          <View style={{flexDirection:"row"}}>
            <Text style={styles.subtitle}>{item.duration} mins | </Text>
            <Star score={item.rating} style={styles.starStyle}/>
          </View>
        </View>
      </View>
    );
  };

  render() {
    const { data } = this.state;
    return (
      <View style={styles.container}>
        <ImageBackground
          source={require("../assets/bg.png")}
          style={{ flex: 1 }}
        >
          <FlatList
            data={data}
            keyExtractor={this.keyExtractor}
            renderItem={this.renderItems}
          />
        </ImageBackground>
      </View>
    );
  }
}
------------------------------------------------------------------------------------------------
